@page "/internal/ViewAllUsers"
@using RoomReservations.Models
@using RoomReservations.Data
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Authorization
@inject IReservationService ReservationService
@inject NavigationManager NavigationManager
@inject SharedMethodsService SharedMethodsService

@inject UserService UserService;
@inject UserManager<ApplicationUser> UserManager;


@attribute [Authorize(Roles = $"{RoleNames.Receptionist}, {RoleNames.Admin}, {RoleNames.Employee}")]
<h3>View All Reservations</h3>

<MudTable Items="@_users" Hover="true" SortLabel="Sort By">
    <HeaderContent>
        <MudTh>
            <MudTableSortLabel SortBy="(ApplicationUser context) => context.Id">Id</MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortBy="(ApplicationUser context) => context.FirstName">
                ImiÄ™
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortBy="(ApplicationUser context) => context.LastName">
                Nazwisko
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortBy="(ApplicationUser context) => context.Email ?? string.Empty">
                Email
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortBy="(ApplicationUser context) => _usersToRoles[context]">
                Role
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            Edytuj
        </MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.Id</MudTd>
        <MudTd DataLabel="First name">@context.FirstName</MudTd>
        <MudTd DataLabel="Last name">@context.LastName</MudTd>
        <MudTd DataLabel="Email">@context.Email</MudTd>
        <MudTd DataLabel="Roles">@_usersToRoles[context]</MudTd>
        <MudTd DataLabel="Edit">
            <MudButton Disabled="@(!_canEdit)" Color="Color.Primary" Variant="Variant.Filled"
                       OnClick="@(() => NavigationManager.NavigateTo($"/internal/edit-user/{context.Id}"))">
                Edytuj
            </MudButton>
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager PageSizeOptions="new[] { 15, 30, 100 }"/>
    </PagerContent>
</MudTable>

@code {
    readonly Dictionary<ApplicationUser, string> _usersToRoles = new();
    List<ApplicationUser> _users = [];
    bool _canEdit;

    protected override async Task OnInitializedAsync()
    {
        _users = UserService.GetAllUsers();
        foreach (var user in _users)
        {
            _usersToRoles.Add(user, await GetRolesForUser(user));
        }
    }

    private async Task<string> GetRolesForUser(ApplicationUser user)
    {
        var roles = await UserManager.GetRolesAsync(user);
        return string.Join(", ", roles);
    }

}